
{
    "icon": "projects/CHUnit/imgs/logo.png",
    "title": "CH-Unit",
    "subtitle": "Multiprocessed C Testing Framework for Unix Systems",

    "timeline": [
        [9, 2022],
        [12, 2022]
    ],
   
    "links": [
        {
            "faClass": "fa-github",
            "url": "https://www.github.com/chathamabate/chvm"
        },
        {
            "faClass": "fa-youtube-play",
            "url": "https://youtu.be/6odDwfECc2U?si=78vb0uiB7X9b9LYH"
        }
    ],

    "skills": [
        "C",
        "Unix",
        "Make",
        "Multiprocessing"
    ],

    "body": [
        {
            "contentType": "pg",
            "lines": [
                "CH-Unit is a piece of a larger project I started in 2022.",
                "At the time, I was interested in building a large C codebase with little help from external libraries.",
                "My intent was to learn about the developer tools we use everyday.",
                "I knew that as my codebase grew, a consistent testing strategy would become increasingly critical.",
                "So, in September of 2022, I began building my own C testing framework: CH-Unit."
            ] 
        }, 
        {

            "contentType": "pg",
            "lines": [
                "CH-Unit’s premiere feature is its use of multiprocessing while running tests.",
                "Each user-defined unit test executes in its own memory space.",
                "Results from each test are communicated back to the framework via a pipe.",
                "When a test process crashes, the framework process persists and continues to run the remaining tests!"
            ] 
        }, 
        {
            "contentType": "pg",
            "lines": [
                "CH-Unit comes with an intuitive set of thread-safe assertions to be used inside of unit tests.",
                "Additionally, CH-Unit supports timeouts and memory leak checks.",
                "Test results are returned in memory and can be reported in any way the user sees fit.",
                "For convenience, CH-Unit provides helper functions for printing test results to the terminal."
            ] 
        }, 
        {
            "contentType": "pg",
            "lines": [
                "Managing multiple processes safely was the most challenging part of this project.",
                "I needed to ensure that CH-Unit successfully terminated all of its child processes before exiting.",
                "Otherwise, stray test processes could potentially persist indefinitely on the user’s machine.",
                "In retrospect, choosing a multiprocessed design for CH-Unit was definitely worth the risk!",
                "By conquering the intricacies of various Unix system calls, I improved my C programming skills and created a tool comparable to JUnit and GoogleTest."
            ] 
        }, 
        {
            "contentType": "pg",
            "lines": [
                "Since CH-Unit is nested inside of a larger project, it is slightly hard to use on its own.",
                "If interested, I would recommend watching the Youtube demo above.",
                "The video describes the organization of the entire Github repo and how tests are located and built."
            ] 
        }
    ]
}
